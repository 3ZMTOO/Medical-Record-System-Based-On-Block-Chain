import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import docstyles from "@/styles/registerDoc.module.css";

import { useState } from "react";
import Link from "next/link";
import Header from "@/components/Header";
import Footer from "@/components/Footer";

const inter = Inter({ subsets: ["latin"] });

export default function registerDoctor() {
  const [address, setAddress] = useState(null);
  async function connectToMetamask() {
    if (window.ethereum) {
      try {
        // Request account access from the user
        const accounts = await window.ethereum.request({
          method: "eth_requestAccounts",
        });
        setAddress(accounts[0]);
      } catch (err) {
        console.error(err);
      }
    } else {
      console.error("Metamask not found");
    }
  }
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [expertise, setExpertise] = useState("");
  const [medicalID, setMedicalID] = useState(null);
  const [educationDoc, setEducationDoc] = useState(null);

  const handleSubmit = (e) => {
    e.preventDefault();
    // Add logic to submit doctor's information
  };

  const handleMedicalIDChange = (e) => {
    setMedicalID(e.target.files[0]);
  };

  const handleEducationDocChange = (e) => {
    setEducationDoc(e.target.files[0]);
  };

  return (
    <>
      <Head>
        <title>MedicalRoom</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className={docstyles.containerdoc}>
        <div className={docstyles.formcontainerdoc}>
          <h1 className={docstyles.titledoc}>Register as a Doctor</h1>
          <form onSubmit={handleSubmit} className={docstyles.form}>
            <div className={docstyles.fielddoc}>
              <label className={docstyles.labeldoc}>Name:</label>
              <input
                type="text"
                className={docstyles.inputdoc}
                value={name}
                onChange={(e) => setName(e.target.value)}
              />
            </div>
            <div className={docstyles.fielddoc}>
              <label className={docstyles.labeldoc}>Email:</label>
              <input
                type="email"
                className={docstyles.inputdoc}
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
            </div>
            <div className={docstyles.fielddoc}>
              <label className={docstyles.labeldoc}>Phone:</label>
              <input
                type="tel"
                className={docstyles.inputdoc}
                value={phone}
                onChange={(e) => setPhone(e.target.value)}
              />
            </div>
            <div className={docstyles.fielddoc}>
              <label className={docstyles.labeldoc}>Expertise Field:</label>
              <input
                type="text"
                className={docstyles.inputdoc}
                value={expertise}
                onChange={(e) => setExpertise(e.target.value)}
              />
            </div>
            <div className={docstyles.fielddoc}>
              <label className={docstyles.labeldoc}>Upload Medical ID:</label>
              <input
                className={docstyles.fileinputdoc}
                type="file"
                onChange={handleMedicalIDChange}
              />
            </div>
            <div className={docstyles.fielddoc}>
              <label className={docstyles.labeldoc}>
                Upload Education Document:
              </label>
              <input
                className={docstyles.fileinputdoc}
                type="file"
                onChange={handleEducationDocChange}
              />
            </div>
            <div className={docstyles.fielddoc}>
              <button className={docstyles.submitbuttondoc} type="submit">
                Submit
              </button>
            </div>
          </form>
        </div>
        <main className={styles.main}>
          <div className={styles.grid}>
            <a
              href="#"
              onClick={() => {
                if (window.ethereum) {
                  window.ethereum.request({ method: "eth_requestAccounts" });
                }
              }}
              className={styles.card}
            >
              {address ? (
                <p>Connected to {address}</p>
              ) : (
                <h2 className={styles.meta}>
                  <div className={styles.imageContainer}>
                    <Image
                      className={styles.metalogo}
                      src="https://i.im.ge/2023/02/21/7XVFgh.OIP-1-removebg-preview.png"
                      alt="Next.js Logo"
                      width={50}
                      height={50}
                      priority
                    />
                  </div>
                  <button
                    className={styles.metamaskbutton}
                    onClick={connectToMetamask}
                  >
                    Connect to Metamask
                  </button>{" "}
                </h2>
              )}
            </a>
          </div>
        </main>
      </div>
      <Footer />;
    </>
  );
}
